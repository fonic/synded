
--------------------------------------------------------------------------------
- WORK IN PROGRESS                                                             -
--------------------------------------------------------------------------------

- Analyze CPObjectives (functions, parameters, execution flow, etc.)


--------------------------------------------------------------------------------
- OPEN                                                                         -
--------------------------------------------------------------------------------

- Test if placing DEAD people works (would be interesting for level design)

- Test if Person.Unique is a bitmask (e.g. what happens when setting flags
  PU_AGENT and PU_GUARD?)

- Test if NPCs and/or computer-controlled agents can wield the Persuadertron
  (does not happen in final game)
  -> no luck yet with CPIsPersTeam + SPObjectives


--------------------------------------------------------------------------------
- DONE                                                                         -
--------------------------------------------------------------------------------

CPObjectives:

- Entries in `CPObjectives` don't have a special order or any special entries
  at the start. Like with all the other tables, entries will work fine even
  when placed arbitrarily.
- Entry 0 is often used as a default, since other entries with `Child == 0` will
  point to it. But that is by choice, not by design (i.e. entry 0 is **not**
  special in any way, it just happens to occupy index 0).
- If one wants a chain of commands to end/stop at a certain command, the last
  command of the chain has to point to **itself** (i.e. endless loop). `Child
  == 0` does **not** act as "end of command" (as described above).
- `Player == 255` means "all agents of a computer player". If **one** agent of a
  CP reaches a command with `Player == 255`, all agents of that same player
  will execute that command at once.
- `gamedata.CPTeamSize` with values other than 8 seems to be broken (unless I'm
  missing something), e.g. if set to 4, only 4 agents out of 8 for each team
  will act. Also tested reducing the number of agents in a game to exactly
  match `gamedata.CPCount` * `gamedata.CPTeamSize` -> no difference
- `ActionType == WAIT_TIME` seems finicky, won't work correctly if there are
  more than 3 concurrent waits, the 4th wait will just be ignored / wait
  endlessly (this was the hardest to figure out).
- Which agent wears which hat color seems to be determined by the location
  within the `People` array. Wearing a certain hat color does **not** mean that
  an agent belongs to a certain computer player (this was even harder to figure
  out).
- `CPObjective.ActionType = CPOAT_USE_WEAPON` seems to mean "drop time bomb"
  specifically; it does not seem to matter what `CPObjective.Action` is set to
  in this context (works even when set to 0); also, if `CPIsBombTeam == 0` +
  `CPIsPersTeam = 1`, i.e. agent carry only a Persuadertron, NOTHING gets
  dropped
- `CPObjective.ActionType = 4` is implemented and seems to mean "shoot
   assassination target specified by Objectives", X/Y/Z are ignored (NOTE: this
   references the target that the human player is suppossed to assassinate, e.g.
   the soldier in GAME01).
- `CPObjective.ActionType = 5` seems to be skipped immediately (or we haven't
   found the correct parameters for Action/X/Y/Z yet; tried to supply person
   to no avail)
- `CPObjective.ActionType = 6` seems to halt further command execution (or we
   haven't found the correct parameters for Action/X/Y/Z yet and this is a sort
   of "wait for sth. to occur"; tried to supply person, but nothing happens)
- ActionType = 1 + Action = 9 -> Go to end enter vehicle
  ActionType = 1 + Action = 25 -> Exit vehicle
  -> see GAME31
- ActionType = 5 + Action = 0 -> SPObjectives execution flow forking (see below)


ActionType, Action,Description (from Moburma)

1,    Go To - always has sub-action to determine type of thing/location to go to
 ,3   Go to point - Always has full coordinates
 ,4   Go to Person - Refers to specific Thing offset in X field
 ,9   Go to and enter vehicle. X is vehicle offset
 ,12  Unknown. Has number 255 in Y
      [TODO], see GAME31 (ONLY use in vanillla Syndicate)
 ,25  Exit vehicle (see GAME31)

2,    Drop time bomb
 ,25  Does not seem to matter for 2, even if set to 0

3,    "Kill human players". Can have modifiers in X field, 4 and 2
      [TODO], maybe this is not just "kill HUMAN player", but players in
              general? (i.e. allows targeting other computer players)

4,    Kill assassination target specified by Objectives
      NOTE: this means "kill the assassination target the human player is
            suppossed to assassinate for this mission

5,    Unknown. Just uses Player
 ,0   SPObjectives execution flow forking: when this command is executed,
      following SPObjectives will be analyzed and whenever an entry with Parent
      == 0, this entry will be assigned to ONE agent of the computer player
      (i.e. each agent gets his own command chain)
      NOTE: it would seem Child == 0, Action == 0 and X/Y/Z = 0 is required for
            this command to work as expected (-or- we do not yet fully under-
            stand what the parameters do/mean)

6,   Unknown. Just uses Player
 ,0  [TODO], see GAME30 (ONLY use in vanilla Syndicate)

7,  Wait. X value is time to wait
8,  Kill specific non-player person in X field
9,  Protect? X is a specific person reference


Objectives:

- Objective.Type == 4: kill all (?), i.e. something is to be killed, but unclear
  what (tried civilians, police, agents, guards, criminals)

- Objective.Type == 6: same as above

-> NOTE: "assassinate" might simply be a switch-case-default (i.e. fallback for
         unhandled values)


--------------------------------------------------------------------------------
- CANCELED                                                                     -
--------------------------------------------------------------------------------

- Nothing atm


--------------------------------------------------------------------------------
- Date: 10/16/25 - 10/16/25                                                    -
--------------------------------------------------------------------------------
