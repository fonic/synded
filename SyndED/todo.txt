
--------------------------------------------------------------------------------
- IN PROGRESS                                                                  -
--------------------------------------------------------------------------------

- Add more enums for known values to 'gdenums.h':

  Angle (from FreeSynd):
  //from 0xF0 to 0x10 : south = 0
  //from 0x10 to 0x30 : south-east = 1
  //from 0x30 to 0x50 : east = 2
  //from 0x50 to 0x70 : east-north = 3
  //from 0x70 to 0x90 : north = 4
  //from 0x90 to 0xB0 : north-west = 5
  //from 0xB0 to 0xD0 : west = 6
  //from 0xD0 to 0xF0 : west-south = 7
  // surface is mapped not to 360 degrees/surface, but 256 degrees/surface


--------------------------------------------------------------------------------
- OPEN                                                                         -
--------------------------------------------------------------------------------

- Further refine game data structs
  -> ONGOING, will take some time + input from Mefistotelis

- Implement basic user menu for viewing/editing:
  1 - Print People
  2 - Print Vehicles
  3 - Print Objects
  4 - Print ...
  ...

  Choice >


--------------------------------------------------------------------------------
- DONE                                                                         -
--------------------------------------------------------------------------------

- Calculate XTile + YTile for things that can appear on map:
  uint16_t XPos/YPos -> higher 8 bits = tile, lower 8 bits = offset within tile
  (according to FreeSynd)

- Translate known values into human-readable strings for CSV output
  (e.g. Person.Unique, Person.Status, Weapon.State, etc.)

- Change Unique in struct Person to uint16_t, eliminate following HugDistance1,
  rename Hugdistance2 to just HugDistance

- Add local offset to CSV output of Commands (to make reference via Command.Next
  visible/readable)

- Revise comments in gamedata.h

- Write MapWho struct to CSV file (128 columns, 128 rows)

- Apply fixes + test compiling on Windows -> WORKS
- Add asprintf library (to allow compiling on Windows)

- Verify and fix CSV output

- Output ALL contents of GameData struct to CSV files

- Deconstruct struct MapInfo into separate members (like in RGAME.C)

- Change command line:
  $ synded INFILE OUTFILE
- Read entire input file into structure GameData
- Write entire output file from structure GameData

- Verify structs (together with Moburma and Mefistotelis)
  -> DONE for now, but will be ongoing (still stuff to figure out / correct)

- Add prints for struct sizes
- Add prints for struct member offsets

- Fill structs MapInfo, Objective, CPObjective

- Restructure GitHub repo

- Move structs to separate header file 'gamedata.h'

- Create base structure as a starting point


--------------------------------------------------------------------------------
- CANCELED                                                                     -
--------------------------------------------------------------------------------

- Nothing atm


--------------------------------------------------------------------------------
- Date: 10/07/25 - 10/10/25                                                    -
--------------------------------------------------------------------------------
